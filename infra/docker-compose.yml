version: '3.8'

services:

  db:
    image: postgres:15.1-alpine
    container_name: restaurant_db
    restart: always
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: restaurant_redis
    restart: always
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 20s
      retries: 100

  rabbitmq:
    container_name: restaurant_rabbitmq
    image: rabbitmq:latest
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 20s
      retries: 100

  web:
    container_name: restaurant_web
    build:
      context: ../
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ../.env
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
    command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  celery_worker:
    container_name: restaurant_celery_worker
    build:
      context: ../
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ../.env
    volumes:
      - ../:/app
    command: celery --app=celery_tasks.tasks worker --loglevel=info
    depends_on:
      rabbitmq:
        condition: service_healthy
